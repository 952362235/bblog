函数重载

通常在C语言编程中，如果我们比较三个整数的大小，我们可以进行编写一个max（）函数，而如果我们要继续比较三个浮点数的大小，就需要重新编写一个函数，函数体基本是完全相同的，就是返回值和参数类型是不同的，但是函数名称不能是一个了，所以要写第二个函数max1()。

在Ｃ＋＋中就可以避免这个问题，允许用同一个函数名定义多个函数，但是一定要注意一点，重载函数的参数个数、参数类型、参数顺序、这三者中至少要有一个不同，才能进行函数重载，因为调用重载函数就是要根据这个来区分具体的调用哪个函数，而函数的返回值可以相同可以不同。

函数模板

函数重载虽然是方便了，但是你还是要定义多个函数，优点就是名字可以相同了，原来的C语言中是不允许两个比较大小函数名字相同的。而函数模板的好处更近一步了，就是你只是需要定义一个函数就可以了。函数模板的通用形式如下所示：

template<typename T>

              通用函数定义

或

template<class T>

              通用函数定义

但是用函数模板只能用于 函数的参数个数相同而类型不同的情况，如果参数个数不同，则不能使用函数模板。


————————————————
版权声明：本文为CSDN博主「zhanghuaichao」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/zhanghuaichao/article/details/52780922
